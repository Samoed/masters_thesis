#+STARTUP: latexpreview
#+TITLE: Разработка фреймфорка по автоматическому определению интентов
#+AUTHOR: Соломатин Роман Игоревич
#+LANGUAGE: ru
#+cite_export: biblatex
#+COMMENT: ':t for https://stackoverflow.com/questions/15097114/how-to-get-smart-quotes-on-org-mode-export
#+LATEX_CLASS: ITMOMasters
#+LATEX_CLASS_OPTIONS: [14pt,a4paper,oneside,openany]
#+LATEX_HEADER: \usepackage[T2A]{fontenc}
#+LATEX_HEADER_EXTRA: \include{config}
#+LATEX_HEADER_EXTRA: \renewcommand{\contentsname}{Содержание}
#+OPTIONS: date:nil

* ТЕРМИНЫ И ОПРЕДЕЛЕНИЯ
:PROPERTIES:
:UNNUMBERED: t
:END:
*AutoML* -- автоматическое машинное обучение.

*NLP* -- обработка естественного языка.

*NLU* -- понимание естественного языка.

* Введение
:PROPERTIES:
:UNNUMBERED: t
:END:
#+LATEX: \addcontentsline{toc}{chapter}{Введение}
В последние годы наблюдается бурный рост интереса к диалоговым системам на основе искусственного интеллекта (чат-ботам, голосовым помощникам и пр.). Так, по данным трендов, интерес к голосовым технологиям AI вырос почти втрое за пять лет[fn:1]. Диалоговые системы внедряются в бизнес-процессы и повседневную жизнь, однако создание их интеллектуальной части – модели определения намерения пользователя (intent classification) – остается сложной задачей. Такой модуль является ключевым компонентом системы, позволяя автоматически выявлять цель запроса пользователя, но учет специфики различных доменов серьезно затрудняет разработку универсальной модели. Проектирование и тонкая настройка модели интентов требуют значительных экспертных усилий в области NLP и ML. Поэтому актуальной представляется автоматизация данного процесса – создание универсальных решений, способных уменьшить долю ручной работы и упростить разработку моделей классификации интентов. Автоматизированные подходы к машинному обучению (AutoML) обещают значительно сократить объем ручного труда за счет автоматического подбора оптимальных моделей и параметров, что особенно важно для быстро растущей области диалоговых систем.

На сегодняшний день для задачи классификации интентов накоплен внушительный арсенал методов. Традиционно применяются алгоритмы классического машинного обучения, такие как наивный tf-idf[cite:@joneskarensparck_statistical_1972], а также подходы на основе k-ближайших соседей и ансамблевые методы (например, градиентный бустинг). С развитием глубокого обучения все более широко используются нейросетевые модели, таких как BERT[cite:@devlin_bert_2019], которые достигают высоких показателей качества на задачах. Параллельно развиваются технологии AutoML, автоматизирующие выбор моделей и настройку гиперпараметров. Тем не менее, несмотря на прогресс отдельных компонентов, целостных универсальных AutoML-фреймворков, специально ориентированных на определение интентов пользователя, предложено немного. Существующие решения зачастую требуют участия эксперта для каждой новой предметной области, что указывает на необходимость разработать более обобщенный подход.

В связи с этим актуальной является проблема отсутствия универсального, масштабируемого и эффективного AutoML-решения для классификации интентов, способного автоматически адаптироваться к разным доменам без глубокого участия человека-эксперта.

*Цель исследования* заключается в разработке такого универсального AutoML-фреймворка, который способен автоматически подбирать оптимальные модели и их конфигурации для классификации интентов пользователя. Разработанное решение будет протестировано на различных корпусах данных (наборы пользовательских запросов), а его эффективность сопоставлена с результатами ручной настройки моделей, чтобы оценить выигрыш от автоматизации.

Для достижения поставленной цели в работе решены следующие задачи:
1. разработка архитектуры и программной реализации AutoML-фреймворка для классификации интентов;
2. экспериментальное испытание фреймворка на нескольких корпусах данных, относящихся к различным предметным областям;
3. сравнение результатов, полученных с помощью AutoML-фреймворка, с качеством моделей, настроенных вручную, и анализ эффективности предлагаемого подхода.

*Практическая значимость* работы состоит в том, что созданный AutoML-фреймворк может быть непосредственно применен при разработке реальных диалоговых систем – чат-ботов, голосовых ассистентов, систем клиентской поддержки – и других NLP-приложений. Использование такого инструмента позволит ускорить внедрение новых сервисов и снизить порог вхождения для разработчиков за счет автоматизации подбора оптимальной модели под конкретный набор интентов.

*Научная новизна* исследования определяется интеграцией современных методов автоматизированного машинного обучения в единой специализированной архитектуре, ориентированной на задачу классификации интентов. В предлагаемом решении объединяются передовые подходы, включая трансформерные модели и методы обучения с малым количеством примеров, в рамках одного AutoML-фреймворка. Такое сочетание технологий нацелено на достижение высокой точности и устойчивости модели при минимальном ручном вмешательстве, что ранее не было реализовано в полной мере для задачи определения интентов пользователя.
* ОБЗОР ПРЕДМЕТНОЙ ОБЛАСТИ
** Определение намерений пользователя
Классификация намерений –  это задача сопоставления высказывания пользователя с предопределенной меткой намерения (семантической категорией цели пользователя). Например, запрос “Какая погода будет завтра?” может быть классифицирован как запрос погоды. Эта способность является ключевым компонентом понимания естественного языка (NLU) в диалоговых системах, позволяя чат-ботам, виртуальным помощникам и другим агентам искусственного интеллекта понимать, чего хочет пользователь, и соответствующим образом реагировать. Классификация намерений уходит корнями в ранние разговорные диалоговые системы (например, телефонное обслуживание клиентов) и с тех пор получила повсеместное распространение в самых разных областях - от личных помощников и ботов поддержки клиентов до систем медицинских и юридических консультаций.

Ранние методы были основаны на правилах, которые разрабатывались вручную, или на классическом машинном обучении с добавлением дополнительных функций. Однако с развитием области преобладать стали статистические методы, которые основываются на анализе данных. Сначала они использовали традиционные алгоритмы машинного обучения, а затем — методы глубокого обучения. Также мы наблюдаем расширение сферы применения: от простой классификации с закрытым набором параметров, когда каждый запрос должен относиться к одному из известных намерений, до более сложных сценариев. Например, к многоцелевой классификации, обнаружению намерений с открытым доменом или открытым набором параметров (когда запрос не соответствует ни одному из известных намерений), а также к распознаванию намерений с минимальным количеством попыток или вообще без них с помощью мощных генеративных моделей.

*** KNN
**** MLKNN
Тут будет описание метода [cite:@zhang_mlknn_2007]
**** DNNC
Тут будет описание метода [cite:@zhang_discriminative_2020]
**** Hierarchical small navigable small worlds
Тут будет описание метода [cite:@malkov_efficient_2018]
*** Классификация
**** Бустинг
Тут будет описание метода catboost [cite:@dorogush_catboost_2018;@prokhorenkova_catboost_2018]
**** Трансформеры
Тут будет описание метода [cite:@reimers_sentencebert_2019;@devlin_bert_2019;@vaswani_attention_2017]. Peft[cite:@han_parameterefficient_2024], LoRa[cite:@hu_lora_2021]
** Методы автоматического машинного обучения
Автоматизированное машинное обучение (AutoML) относится к автоматизации полного процесса применения методов машинного обучения для решения реальных задач. Вместо того чтобы вручную выбирать алгоритмы, настраивать гиперпараметры, разрабатывать архитектуры моделей и создавать признаки, система AutoML автоматически принимает эти решения на основе данных. Мотивация для развития AutoML вытекает из бурного роста применения машинного обучения и стремления "демократизировать" машинное обучение – сделать современные техники доступными даже для неспециалистов. Модели машинного обучения зачастую чувствительны к множеству параметров (тип модели, архитектура, настройки гиперпараметров, предварительная обработка признаков и так далее), и нахождение оптимальной конфигурации часто требует кропотливого перебора даже для экспертов. Эта проблема особенно заметна в глубоком обучении, где выбор правильной архитектуры сети и стратегии обучения может определять конечное качество модели. Цель AutoML – автоматизировать принятие этих решений, позволяя пользователю просто предоставить данные, а система подбирает оптимальную модель. Данный обзор литературы предоставляет академический анализ AutoML с основным упором на его применение в обработке естественного языка (NLP), а также включает как фундаментальные работы, так и последние разработки. Мы рассмотрим историческую эволюцию и мотивации AutoML, ключевые технические компоненты, ведущие фреймворки и системы, особенности применения AutoML в задачах NLP (например, классификация текстов, маркировка последовательностей, языковое моделирование), сравнительный анализ производительности и существующие бенчмарки, а также новые тенденции и направления исследований (например, интеграция с фундаментальными моделями, обучение с малым количеством примеров, объяснимость моделей). Обзор ссылается на рецензируемые публикации и академические источники.

- LAMA[cite:@vakhrushev_lightautoml_2022]
- AutoGluon[cite:@erickson_autogluontabular_2020]
- H2O[cite:@ledell_h2o_2020]
- TPOT
- TextBrew[cite:@desai_textbrew_2022]
** Текстовые аугментации
- Intent-augmentation [cite:@hu_exploring_2024]
- Few-shot detection [cite:@hou_fewshot_2021]
- Dspy [cite:@khattab_dspy_2023]
* ПРОЕКТИРОВАНИЕ

#+NAME: fig:framework_schema
#+begin_src mermaid :file img/mermaid/framework_schema.png :results output :theme neutral
%%{
   init: {
     "theme": 'base',
     "themeVariables": {
       "primaryColor": '#FFF',
       "primaryTextColor": '#000',
       "primaryBorderColor": '#000',
       "lineColor": '#000'
     }
   }
}%%
flowchart TD
    data[Данные]
    config[Конфигурация]
    pipeline[Пайплайн]
    optimization[Оптимизация]
    params[Параметры]
    block[Блок]
    scoring[Оценка]
    select_best[Выбор лучших параметров]

    data --> pipeline
    config --> pipeline
    pipeline --> optimization
    optimization --> params
    params --> block
    block --> scoring
    scoring --> select_best
    select_best --> pipeline
#+end_src

#+CAPTION: Схема фреймворка
#+ATTR_LATEX: :width 0.6\textwidth :height 0.5\textheight :placement [h]
#+RESULTS: fig:framework_schema
[[file:img/mermaid/framework_schema.png]]

* Заключение
:PROPERTIES:
:UNNUMBERED: t
:END:
#+print_bibliography: :title СПИСОК\spaceИСПОЛЬЗОВАНЫХ\spaceИСТОЧНИКОВ

* Footnotes

[fn:1] https://www.verloop.io/blog/100-best-chatbot-statistics
# Local Variables:
# org-latex-title-command: nil
# org-latex-packages-alist: nil
# org-latex-listings: t
# org-latex-toc-command: "\\MyTOC\n\n"
# End:
